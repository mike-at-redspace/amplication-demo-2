/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsBoolean,
  IsOptional,
  IsDate,
  IsString,
  ValidateNested,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { ProjectUpdateManyWithoutTasksInput } from "./ProjectUpdateManyWithoutTasksInput";
import { EnumTaskStatus } from "./EnumTaskStatus";
import { UserUpdateManyWithoutTasksInput } from "./UserUpdateManyWithoutTasksInput";
@InputType()
class TaskUpdateInput {
  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  completed?: boolean | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  completedDate?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: () => ProjectUpdateManyWithoutTasksInput,
  })
  @ValidateNested()
  @Type(() => ProjectUpdateManyWithoutTasksInput)
  @IsOptional()
  @Field(() => ProjectUpdateManyWithoutTasksInput, {
    nullable: true,
  })
  projects?: ProjectUpdateManyWithoutTasksInput;

  @ApiProperty({
    required: false,
    enum: EnumTaskStatus,
  })
  @IsEnum(EnumTaskStatus)
  @IsOptional()
  @Field(() => EnumTaskStatus, {
    nullable: true,
  })
  status?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: () => UserUpdateManyWithoutTasksInput,
  })
  @ValidateNested()
  @Type(() => UserUpdateManyWithoutTasksInput)
  @IsOptional()
  @Field(() => UserUpdateManyWithoutTasksInput, {
    nullable: true,
  })
  user?: UserUpdateManyWithoutTasksInput;
}
export { TaskUpdateInput };
